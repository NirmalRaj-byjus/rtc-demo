{"version":3,"sources":["reportWebVitals.js","Components/RemoteStream.js","Rtm.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","RemoteStream","props","id","stream","onAVChange","isTute","speaking","tuteControls","audioState","videoState","className","fontSize","onClick","video","audio","videoProfiles","label","detail","value","Rtm","initRTM","RTMClient","AgoraRTM","createInstance","appId","subscribeClientEvents","getChannelCount","getChannelMemberCount","channel","res","console","log","catch","error","loginToRTM","a","state","uid","alert","login","token","RTMChannel","createChannel","setState","rtmLoggedIn","getAVStates","joinSessionChannel","getChannelAttributes","attr","av","JSON","parse","checkForInitialMute","ctrl","tuteAVControls","muteUser","join","joinChannel","rtmChannelJoined","subscribeChannelEvents","on","message","memberId","attributes","event","peerId","data","text","type","localAudio","audioTrack","setEnabled","localVideo","videoTrack","initLocalStream","AgoraRTC","createCameraVideoTrack","encoderConfig","selectedProfile","createMicrophoneAudioTrack","play","localVideoView","current","onDeviceChange","onMicrophoneChanged","onCameraChanged","info","device","getDevices","devices","audioDevices","filter","kind","length","deviceId","newAudioDevice","audioPublished","RTCClient","unpublish","publishTrack","track","publish","trackMediaType","videoPublished","unpublishTrack","initClient","createClient","mode","codec","subscribeEvents","userPublished","userUnPublished","userLeft","userJoined","enableAudioVolumeIndicator","volumeIndicator","volumes","forEach","volume","index","level","updateSpeaker","suid","speakers","push","removeSpeaker","setTimeout","indexOf","splice","user","reason","remoteStreams","mediaType","subscribe","setRemoteVideoStreamType","setStreamFallbackOption","unsubscribe","rtm","params","enableDualStream","err","toggleTrack","addOrUpdateChannelAttributes","stringify","sendMessageToPeer","toString","result","hasPeerReceived","getChannelAttr","leaveChannel","leave","logout","toggleProfile","target","setEncoderConfiguration","localStreamInitiated","React","createRef","this","onChange","e","placeholder","ref","style","marginRight","Object","keys","marginLeft","map","item","Component","ReactDOM","render","StrictMode","display","document","getElementById"],"mappings":"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","file":"static/js/main.4625e3e7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect } from 'react';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\nimport MicIcon from '@material-ui/icons/Mic';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport SpeakerIcon from '@material-ui/icons/Speaker';\n\nconst RemoteStream = (props) => {\n  const { id, stream, onAVChange, isTute = false, speaking = false, tuteControls = {} } = props;\n  const { audioState, videoState } = stream;\n\n  return (\n    <div className=\"remoteStreamItem\">\n      <div className={speaking ? \"remoteStream speaking\" : \"remoteStream\"} id={id}>\n        {speaking && <div className=\"speakerIcon\"><SpeakerIcon fontSize=\"small\" /></div>}\n        <div className=\"rmtControls\">\n          <div className=\"controlIcon\" >{videoState ? <VideocamIcon fontSize=\"small\" /> : <VideocamOffIcon fontSize=\"small\" />}</div>\n          <div className=\"controlIcon\">{id}</div>\n          <div className=\"controlIcon\" >{audioState ? <MicIcon fontSize=\"small\" /> : <MicOffIcon fontSize=\"small\" />}</div>\n        </div>\n      </div>\n\n      {isTute && <div className=\"tuteControls\">\n        <button className=\"controlIcon\" onClick={() => onAVChange(id, 'video', tuteControls.video)} >{tuteControls.video ? \"Mute Video\" : \"Unmute Video\"}</button>\n        <button className=\"controlIcon\" onClick={() => onAVChange(id, 'audio', tuteControls.audio)}>{tuteControls.audio ? \"Mute Audio\" : \"Unmute Audio\"}</button>\n      </div>}\n    </div>\n  );\n};\n\nexport default RemoteStream;","import React from 'react';\nimport AgoraRTC from 'agora-rtc-sdk-ng';\nimport './App.css';\nimport RemoteStream from './Components/RemoteStream';\n\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\nimport MicIcon from '@material-ui/icons/Mic';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport AgoraRTM from 'agora-rtm-sdk';\n\n\nvar videoProfiles = [\n  { label: \"120p_1\", detail: \"120p_1, 160×120, 15fps, 65Kbps\", value: \"120p_1\" },\n  { label: \"180p_1\", detail: \"180p_1, 320×180, 15fps, 140Kbps\", value: \"180p_1\" },\n  { label: \"240p_1\", detail: \"240p_1, 320×240, 15fps, 200Kbps\", value: \"240p_1\" },\n  { label: \"360p_1\", detail: \"360p_1, 640×360, 30fps, 400Kbps\", value: \"360p_1\" },\n  { label: \"480p_2\", detail: \"480p_2, 640×480, 30fps, 1000Kbps\", value: \"480p_2\" },\n  { label: \"720p_1\", detail: \"720p_1, 1280×720, 15fps, 1130Kbps\", value: \"720p_1\" },\n  { label: \"720p_2\", detail: \"720p_2, 1280×720, 30fps, 2000Kbps\", value: \"720p_2\" },\n  { label: \"1080p_1\", detail: \"1080p_1, 1920×1080, 15fps, 2080Kbps\", value: \"1080p_1\" },\n  { label: \"1080p_2\", detail: \"1080p_2, 1920×1080, 30fps, 3000Kbps\", value: \"1080p_2\" },\n  // { label: \"200×640\", detail: \"200×640, 30fps\", value: { width: 200, height: 640, frameRate: 30 } } // custom video profile\n]\n\n\nclass Rtm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      localStreamInitiated: false,\n      remoteStreams: {\n        // '12': {\n        //   audio: false,\n        //   video: false\n        // },\n        // '13': {\n        //   audio: false,\n        //   video: false\n        // },\n        // '14': {\n        //   audio: false,\n        //   video: false\n        // },\n        // '15': {\n        //   audio: false,\n        //   video: false\n        // }\n      },\n      localVideo: true,\n      localAudio: true,\n      videoPublished: false,\n      audioPublished: false,\n      rtmLoggedIn: false,\n      rtmChannelJoined: false,\n      uid: \"\",\n      tuteAVControls: {\n        audio: true,\n        video: true\n      },\n      isTute: true,\n      selectedProfile: '240p_1',\n\n      tuteControls: {\n\n      },\n      speakers: [],\n\n    }\n\n\n    this.videoTrack = null\n    this.audioTrack = null;\n    this.RTMChannel = null;\n    this.RTCClient = null;\n    this.RTMClient = null;\n\n    this.channel = \"demo_channel_name\";\n    this.localVideoView = React.createRef();\n    this.appId = \"b8f5d7b5efcc4ba8992ac09d46a591b1\";\n\n\n    this.rtm = {\n      params: {\n      }\n    }\n  }\n\n\n\n\n  componentDidMount() {\n    this.initRTM();\n    this.initLocalStream();\n    this.onDeviceChange();\n    this.initClient();\n  }\n\n  initRTM = () => {\n    this.RTMClient = AgoraRTM.createInstance(this.appId);\n    this.subscribeClientEvents();\n  }\n\n\n  getChannelCount = () => {\n    this.RTMClient.getChannelMemberCount([this.channel]).then(res => {\n      console.log(\" =>> getChannelMemberCount\", res);\n    }).catch(error => {\n      console.log(\" =>> failed to get getChannelMemberCount\", error)\n    })\n\n    // this.RTMChannel.getMembers().then(res => {\n    //   console.log(\" =>> member count\", res);\n    // }).catch(error => {\n    //   console.log(\" =>> failed to get member count\", error)\n    // })\n  }\n\n  // getUserAttr = () => {\n  //   this.RTMClient.getUserAttributes(\"kj123\").then(res => {\n  //     console.log(\" =>> user Attr \", res);\n  //   }).catch(error => {\n  //     console.log(\" =>> failed to get user Attr\", error)\n  //   })\n  // }\n\n  // disableMe = () => {\n  //   this.RTMClient.setLocalUserAttributes({ \"videoState\": \"off\" }).then(res => {\n  //     console.log(\" =>> set user Attr done\", res);\n  //   }).catch(error => {\n  //     console.log(\" =>> failed to set user Attr\", error)\n  //   })\n  // }\n\n\n\n  loginToRTM = async () => {\n    if (this.state.uid === \"\") {\n      alert(\"please enter username\");\n      return;\n    }\n    await this.RTMClient.login({ uid: this.state.uid, token: null }).then((res) => {\n      console.log(\" =>> RTM Loggin successfull!\");\n      this.RTMChannel = this.RTMClient.createChannel(this.channel);\n\n      this.setState({ rtmLoggedIn: true, isTute: this.state.uid === 'admin' });\n      this.getAVStates();\n      this.joinSessionChannel();\n    }).catch(error => {\n      console.log(\" =>> failed to login RTM\", error)\n    })\n  }\n\n  getAVStates = async () => {\n    this.RTMClient.getChannelAttributes(this.channel).then(attr => {\n      console.log(\"=>> channel attrs\", attr)\n      let tuteControls = attr.av ? JSON.parse(attr.av.value) : {};\n      console.log(\"=>> controls tute\", tuteControls);\n      this.checkForInitialMute(tuteControls);\n      this.setState({ tuteControls });\n    }).catch(error => {\n      console.log(\"failed to get channel attrs\", error);\n    })\n  }\n\n  checkForInitialMute = (tuteControls) => {\n    let ctrl = tuteControls[this.state.uid] || null;\n    let tuteAVControls = { ...this.state.tuteAVControls }\n    if (ctrl) {\n      console.log(\"attr \", ctrl, !tuteAVControls.audio, !tuteAVControls.video);\n      if (!ctrl.audio) {\n        this.muteUser('audio')\n        tuteAVControls.audio = false;\n      }\n      if (!ctrl.video) {\n        this.muteUser('video')\n        tuteAVControls.video = false;\n      }\n      this.setState({ tuteAVControls })\n    }\n  }\n\n  joinSessionChannel = async () => {\n\n    this.RTMChannel.join().then(res => {\n      console.log(\" =>> Channel joined successfull!\", res);\n      this.joinChannel();\n      this.setState({ rtmChannelJoined: true })\n\n    }).catch(error => {\n      console.log(\" =>> Error joining channel\", error);\n    })\n  }\n\n  subscribeChannelEvents = () => {\n    this.RTMChannel.on('ChannelMessage', (message, memberId) => {\n      console.log(\"ChannelMessage =>>\", message, memberId)\n    })\n    this.RTMChannel.on('MemberJoined', (memberId) => {\n      console.log(\"MemberJoined =>>\", memberId)\n    })\n    this.RTMChannel.on('MemberLeft', memberId => {\n      console.log(\"MemberLeft =>>\", memberId)\n    });\n\n    this.RTMChannel.on('AttributesUpdated', attributes => {\n      console.log(\"AttributesUpdated =>>\", attributes);\n    })\n\n  }\n\n\n\n  subscribeClientEvents = () => {\n    this.RTMClient.on('ConnectionStateChanged', (event) => {\n      console.log(\"ConnectionStateChanged =>>\", event)\n    })\n    this.RTMClient.on('MessageFromPeer', (message, peerId) => {\n      console.log(\"MessageFromPeer =>>\", message, peerId)\n      let data = JSON.parse(message.text);\n      console.log(\"=>> msg\", data);\n      if (data.value === false) {\n        this.muteUser(data.type);\n      }\n      let tuteAVControls = { ...this.state.tuteAVControls };\n      tuteAVControls[data.type] = data.value;\n      this.setState({ tuteAVControls })\n\n    })\n  }\n\n  muteUser = (type) => {\n    if (type === 'audio') {\n      if (this.state.localAudio) {\n        this.audioTrack.setEnabled(false);\n        this.setState({ localAudio: false });\n      }\n    } else if (type === 'video') {\n      if (this.state.localVideo) {\n        this.videoTrack.setEnabled(false);\n        this.setState({ localVideo: false });\n      }\n    }\n  }\n\n  initLocalStream = async () => {\n    try {\n      // [this.audioTrack, this.videoTrack] = await AgoraRTC.createMicrophoneAndCameraTracks();\n      this.videoTrack = await AgoraRTC.createCameraVideoTrack({ encoderConfig: this.state.selectedProfile });\n      this.audioTrack = await AgoraRTC.createMicrophoneAudioTrack();\n      // this.videoTrack.setOptimizationMode(\"motion\");\n      this.videoTrack.play(this.localVideoView.current);\n    } catch (error) {\n      alert(\"please check the permission for audio/camera\")\n      console.log(\"Weeoe\", error)\n    }\n  }\n\n  onDeviceChange = () => {\n    AgoraRTC.onMicrophoneChanged = this.onMicrophoneChanged;\n    // AgoraRTC.onCameraChanged = this.onPlaybackDeviceChange;\n  }\n\n  onCameraChanged = (info) => {\n    console.log(\"camera changed!\", info.state, info.device);\n  }\n\n\n  onMicrophoneChanged = async (info) => {\n    console.log(\"LLL  newdevice\", info);\n    try {\n      AgoraRTC.getDevices()\n        .then(async devices => {\n          const audioDevices = devices.filter(function (device) {\n            return device.kind === \"audioinput\";\n          });\n          console.log(audioDevices);\n          if (audioDevices.length > 0) {\n            let newAudioDevice = await AgoraRTC.createMicrophoneAudioTrack(audioDevices[0].deviceId);\n            if (this.state.audioPublished) {\n              await this.RTCClient.unpublish(this.audioTrack);\n              if (this.state.localAudio) {\n                this.publishTrack(newAudioDevice);\n              } else {\n                this.setState({ audioPublished: false });\n              }\n            }\n            this.audioTrack = newAudioDevice;\n\n          }\n        })\n    } catch (error) {\n      console.log(\"Error on get device,\", error);\n    }\n  }\n\n\n  publishTrack = (track) => {\n    this.RTCClient.publish(track).then(res => {\n      if (track.trackMediaType === 'audio') {\n        this.setState({ audioPublished: true })\n      } else if (track.trackMediaType === 'video') {\n        this.setState({ videoPublished: true })\n      }\n    }).catch(error => {\n      console.log(\"Failed to published track :\" + track.trackMediaType, track.trackMediaType, error);\n    })\n  }\n\n  unpublishTrack = async (track) => {\n    this.RTCClient.unpublish(track).then(() => {\n      console.log(\"unpublishTrack =>> :track unpublished\", track);\n    }).catch(error => {\n      console.log(\"unpublishTrack =>> : failed to unpublish track\", error);\n    })\n  }\n\n\n  initClient = () => {\n    this.RTCClient = AgoraRTC.createClient({\n      mode: 'rtc',\n      codec: 'vp8'\n    })\n    this.subscribeEvents();\n  }\n\n  subscribeEvents = () => {\n    this.RTCClient.on('user-published', this.userPublished);\n    this.RTCClient.on('user-unpublished', this.userUnPublished);\n    this.RTCClient.on('user-left', this.userLeft);\n    this.RTCClient.on('user-joined', this.userJoined);\n    this.RTCClient.enableAudioVolumeIndicator();\n    this.RTCClient.on('volume-indicator', this.volumeIndicator)\n  }\n\n  volumeIndicator = (volumes) => {\n    volumes.forEach((volume, index) => {\n      console.log(` =>> ${index} UID ${volume.uid} Level ${volume.level}`);\n      if (volume.level >= 5) {\n        this.updateSpeaker(volume.uid);\n      }\n    });\n  }\n\n  updateSpeaker = (uid) => {\n    let suid = uid;\n    let speakers = [...this.state.speakers];\n    speakers.push(suid);\n    this.setState({ speakers }, () => this.removeSpeaker(suid));\n  }\n\n  removeSpeaker = (suid) => {\n    setTimeout(() => {\n      console.log(\"cleared speaker\", suid)\n      let speakers = [...this.state.speakers];\n      const index = speakers.indexOf(suid);\n      if (index > -1) {\n        speakers.splice(index, 1);\n      }\n      this.setState({ speakers });\n    }, 2000);\n  }\n\n  userLeft = (user, reason) => {\n    console.log(\"userLeft Reason\", reason);\n    let remoteStreams = { ...this.state.remoteStreams };\n    delete remoteStreams[user.uid];\n    this.setState({ remoteStreams });\n  }\n\n  userJoined = (user) => {\n    let remoteStreams = { ...this.state.remoteStreams };\n    let tuteControls = { ...this.state.tuteControls };\n    remoteStreams[user.uid] = {\n      uid: user.uid,\n      videoState: false,\n      audioState: false\n    };\n\n    if (!tuteControls[user.uid]) {\n      tuteControls[user.uid] = {\n        audio: true,\n        video: true\n      }\n    }\n    this.setState({\n      remoteStreams,\n      tuteControls\n    })\n  }\n\n  userPublished = async (user, mediaType) => {\n    console.log(\"LLLLL pub =>>>> \", mediaType);\n    await this.RTCClient.subscribe(user, mediaType);\n    await this.RTCClient.setRemoteVideoStreamType(user.uid, 0)\n    await this.RTCClient.setStreamFallbackOption(user.uid, 2)\n    let remoteStreams = { ...this.state.remoteStreams };\n    let uid = user.uid;\n    if (mediaType === \"video\") {\n      user.videoTrack.play(uid + \"\");\n      remoteStreams[uid].videoState = true;\n    }\n    else if (mediaType === \"audio\") {\n      user.audioTrack.play();\n      remoteStreams[uid].audioState = true;\n    }\n    this.setState({ remoteStreams });\n\n  }\n\n  userUnPublished = async (user, mediaType) => {\n    console.log(\"LLLLL unpub =>>>> \", mediaType);\n    await this.RTCClient.unsubscribe(user, mediaType);\n    let uid = user.uid;\n    let remoteStreams = { ...this.state.remoteStreams };\n    if (remoteStreams[uid]) {\n      if (mediaType === \"video\") {\n        remoteStreams[uid].videoState = false;\n      }\n      else if (mediaType === \"audio\") {\n        remoteStreams[uid].audioState = false;\n      }\n      this.setState({ remoteStreams });\n    }\n  }\n\n  joinChannel = () => {\n    if (this.RTCClient !== null) {\n      this.RTCClient.join(this.appId, this.channel, null, this.state.uid).then(uid => {\n        this.rtm.params.uid = uid;\n\n        this.RTCClient.enableDualStream().then(() => {\n          console.log(\"Enable Dual stream success!\");\n        }).catch(err => {\n          console.log(err);\n        })\n\n        if (this.state.localVideo) {\n          this.publishTrack(this.videoTrack);\n        }\n        if (this.state.localAudio) {\n          this.publishTrack(this.audioTrack);\n        }\n      }).catch(error => {\n        console.log(\"failed to join channel \", error);\n      })\n    }\n  }\n\n  toggleTrack = async (track) => {\n\n\n    if (track === 'video' && this.state.tuteAVControls.video) {\n      if (this.state.localVideo) {\n        await this.videoTrack.setEnabled(false);\n      } else {\n        await this.videoTrack.setEnabled(true);\n\n        if (!this.state.videoPublished) {\n          this.publishTrack(this.videoTrack);\n        }\n      }\n      this.setState({ localVideo: !this.state.localVideo })\n\n    } else if (track === 'audio' && this.state.tuteAVControls.audio) {\n      if (this.state.localAudio) {\n        await this.audioTrack.setEnabled(false);\n      } else {\n        await this.audioTrack.setEnabled(true);\n        if (!this.state.audioPublished) {\n          this.publishTrack(this.audioTrack);\n        }\n\n      }\n      this.setState({ localAudio: !this.state.localAudio });\n    }\n\n  }\n  onAVChange = (id, type, value) => {\n    let tuteControls = { ...this.state.tuteControls }\n    let ctrl = tuteControls[id] ? { ...tuteControls[id] } : {};\n    ctrl[type] = !value;\n    tuteControls[id] = ctrl;\n\n    this.RTMClient.addOrUpdateChannelAttributes(this.channel, { 'av': JSON.stringify(tuteControls) }).then(res => {\n      console.log(\"AV updated successfully!\");\n      let text = JSON.stringify({ type, value: !value });\n      this.RTMClient.sendMessageToPeer(\n        { text }, id.toString())\n        .then(result => {\n          console.log(\"sendResult =>>\", result);\n          if (result.hasPeerReceived) {\n            this.setState({ tuteControls });\n          }\n        }).catch(error => {\n          console.log(\"failed to send peer meg\", error);\n        })\n    })\n  }\n\n  getChannelAttr = () => {\n    this.RTMClient.getChannelAttributes(this.channel).then(attr => {\n      console.log(\"=>> channel attrs\", attr)\n    }).catch(error => {\n      console.log(\"failed to get channel attrs\", error);\n    })\n  }\n\n  leaveChannel = () => {\n    this.RTMChannel.leave().then(() => {\n      console.log(\"Logged out from channel\");\n      this.RTMClient.logout().then(() => {\n        console.log(\"Logged out from Agora\");\n        this.RTCClient.leave();\n        this.setState({ rtmChannelJoined: false, rtmLoggedIn: false })\n      }).catch(error => {\n        console.log(\"=>> Error on Logging out from channel\", error);\n      })\n    }).catch(error => {\n      console.log(\"=>> Error on leaving channel \", error);\n    })\n  }\n\n  toggleProfile = async (event) => {\n    let value = event.target.value;\n    await this.videoTrack.setEncoderConfiguration(value).then(() => {\n      console.log(\" =>> Video profile updated : \", value)\n      this.setState({ selectedProfile: value });\n    })\n  }\n\n  render() {\n    const { remoteStreams, rtmLoggedIn, rtmChannelJoined, tuteControls, speakers } = this.state;\n    console.log(\"streams =>>\", remoteStreams);\n    console.log(\"Speaker =>>\", speakers);\n    return (\n      <div className=\"App\">\n        <div className=\"localStreamContainer\">\n          <input className=\"input\" value={this.state.uid} onChange={(e) => this.setState({ uid: e.target.value })} placeholder=\"enter user name\" />\n          <div id=\"localView\" ref={this.localVideoView}></div>\n          <div className=\"controls\">\n            <div className=\"controlIcon\" onClick={() => this.toggleTrack(\"video\")}>{this.state.localVideo ? <VideocamIcon fontSize=\"large\" /> : <VideocamOffIcon fontSize=\"large\" />}</div>\n            <div className=\"controlIcon\" onClick={() => this.toggleTrack(\"audio\")}>{this.state.localAudio ? <MicIcon fontSize=\"large\" /> : <MicOffIcon fontSize=\"large\" />}</div>\n          </div>\n          {!rtmLoggedIn && <button className=\"join\" onClick={this.loginToRTM}>Login RTM</button>}\n          {/* {rtmLoggedIn && !rtmChannelJoined && <button className=\"join\" onClick={this.joinSessionChannel}>Join Channel</button>} */}\n          {rtmChannelJoined && <button className=\"join\" onClick={this.leaveChannel}>Leave Channel</button>}\n          {/* <button className=\"join\" onClick={this.getChannelCount}>Member count</button> */}\n          {/* <button className=\"join\" onClick={this.getUserAttr}>Get user Attr</button> */}\n          {/* <button className=\"join\" onClick={this.disableMe}>mark me as disabled</button> */}\n          {/* <button className=\"join\" onClick={this.getChannelAttr}>Get channel attr</button> */}\n        </div>\n        <div className=\"rightContainer\">\n          <div className=\"info\">\n            <div style={{ marginRight: \"10px\" }}>Count: {Object.keys(remoteStreams).length}</div>\n            | Video profile\n            <select style={{ marginLeft: \"10px\" }} value={this.state.selectedProfile} onChange={this.toggleProfile}>\n              {videoProfiles.map(item => <option value={item.value} key={item.label}>{item.detail}</option>)}\n            </select>\n          </div>\n          <div className=\"remoteStreamContainer\">\n            {Object.keys(remoteStreams).map((item, index) => <RemoteStream speaking={speakers.indexOf(item) > -1} key={item} isTute={this.state.isTute} onAVChange={this.onAVChange} tuteControls={tuteControls[item]} stream={remoteStreams[item]} id={item} />)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Rtm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import App4 from './App4.1';\nimport Rtm from './Rtm';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div style={{ display: 'flex' }}>\n      <Rtm />\n    </div>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}